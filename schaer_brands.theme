<?php
use Drupal\Core\Site\Settings;

/**
 * Implement hook_preprocess()
 *
 * Make schaer_brand available in every template.
 *
 * @param $variables
 */
function schaer_brands_preprocess(&$variables) {
  $variables['schaer_brand'] = Settings::get('schaer_brand');
  $variables['schaer_brand_search_id'] = Settings::get('brands_search_id', 32);

}

/**
 * Attach the brand specific css file to the theme.
 *
 * @param $libraries
 *    The libraries.
 * @param $extension
 *    The extension.
 */
function schaer_brands_library_info_alter(&$libraries, $extension) {
  if ($extension == 'schaer_brands') {
    $libraries['global-styling']['css']['theme']['dest/style_'. Settings::get('schaer_brand') .'.css'] = ['preprocess' => true];
  }
}

/**
 * Implements hook_preprocess_preprocess_links__language_block().
 *
 * The current language is not part of the block - so we add it.
 *
 * @param $variables
 */
function schaer_brands_preprocess_links__language_block(&$vars) {
    $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
    $vars['language'] = $language;
}

/**
 * Implements hook_preprocess_menu__extras().
 *
 * Assign field_icon as icon property to the main menu item.
 * For now only first level menu items are support.
 *
 * @param $variables
 */
function schaer_brands_preprocess_menu__extras(&$variables) {
  foreach ($variables['items'] as &$item) {
    $entity = isset($item['entity']) ? $item['entity'] : NULL;
    if ($entity != NULL && $entity->hasField('field_icon')) {
      $item['icon'] = $entity->field_icon->value;
    }
  }
}

/**
 * Implements hook_suggestions_table_alter().
 *
 * Add theme suggestions for table.
 */
function schaer_brands_theme_suggestions_table_alter(array &$suggestions, array $variables) {
  $suggestions[] = 'table__' . 'test';
}

/**
 * Implements hook_suggestions_form_element_alter().
 *
 * Add theme suggestions for form_elements.
 */
function schaer_brands_theme_suggestions_form_element_alter(array &$suggestions, array $variables) {
  $x = '';
  if (isset($variables['element']['#form_id'])) {
    $suggestions[] = 'form_element__' . $variables['element']['#form_id'];
  }
  if (isset($variables['element']['#type'])) {
    $suggestions[] = 'form_element__' . $variables['element']['#type'];
  }
}

/**
 * Implements hook_suggestions_select_alter().
 *
 * Add theme suggestions for selects.
 */
function schaer_brands_theme_suggestions_select_alter(array &$suggestions, array $variables) {
  if (isset($variables['element']['#type'])) {
    $suggestions[] = 'select__' . $variables['element']['#type'];
  }
}

/**
 * Implements hook_suggestions_container_alter().
 *
 * Add theme suggestions for container.
 */
function schaer_brands_theme_suggestions_container_alter(array &$suggestions, array $variables) {
  if (!empty($variables['element']['0']['#view'])) {
    $id = $variables['element']['0']['#view']->storage->id();
    $suggestions[] = 'container__views_view__' . $id;
  }
}

function schaer_brands_preprocess_pager(&$variables) {
  if (!empty($variables['items']['last']) && !empty($variables['items']['last']['href'])) {
    $variables['items']['last']['page_number'] = preg_replace('/.*page=/', '', $variables['items']['last']['href']);
  }
}

function schaer_brands_preprocess_views_view_unformatted__tags(&$variables) {
  /** @var \Drupal\taxonomy\Entity\Term $term */
  $term = \Drupal::routeMatch()->getParameter('taxonomy_term');
  $language = Drupal::languageManager()->getCurrentLanguage();
  if ($term != NULL && $term->hasTranslation($language->getId())) {
    $translated_term = $term->getTranslation($language->getId());
    $variables['tag'] = $translated_term->name->value;
  }
}

/**
 * Implements hook_suggestions_facets_item_list_alter().
 *
 * Add theme suggestions for facets_item_list.
 */
function schaer_brands_theme_suggestions_facets_item_list_alter(array &$suggestions, array $variables) {
  if (isset($variables['facet']) &&
    ($variables['facet']->id() == 'tag_target_group' || $variables['facet']->id() == 'target_group')) {
    $suggestions[] = 'facets_item_list__checkbox__target_group';
  }
}

/**
 * Implements hook_preprocess_preprocess_links__language_block().
 *
 * The current language is not part of the block - so we add it.
 *
 * @param $variables
 */
function schaer_brands_preprocess_paragraph(&$vars) {
    if (!empty($vars['paragraph']) && $vars['paragraph']->bundle() == 'search_target_group') {
        $request = Drupal::request();
        $vars['elements']['#search_query'] = $request->get('keyword');
    }
}

/**
 * Sets the label as placeholder for all textfields.
 *
 * Implements hook_preprocess.
 */
function schaer_brands_preprocess_input__textfield(&$vars) {
  if (empty($vars['attributes']['placeholder']) && isset($vars['element']['#title'])) {
    $vars['attributes']['placeholder'] = (string)$vars['element']['#title'];
  }
}
